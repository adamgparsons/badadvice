{"version":3,"sources":["fonts/Inter-Black.ttf","fonts/Inter-Bold.ttf","fonts/Inter-Regular.ttf","components/MethodIcon.js","components/Get.js","components/Response.js","views/docs.js","components/Button.js","views/login.js","views/dashboard.js","components/ProtectedRoute.js","App.js","index.js","images/logo.svg"],"names":["module","exports","MethodIcon","method","className","Get","url","Response","result","refresh","onClick","Array","isArray","map","singleAdvice","Fragment","key","window","location","hostname","Docs","useState","singleResult","setSingleResult","multipleResult","setMultipleResult","getSingleAdvice","a","fetch","then","response","json","data","getMultipleAdvice","useEffect","src","Logo","alt","role","aria-label","href","Button","label","Login","username","password","loginDetails","setLoginDetails","history","useHistory","handleInput","e","preventDefault","target","name","value","onSubmit","headers","body","JSON","stringify","console","log","ok","error","Error","message","localStorage","setItem","token","push","catch","htmlFor","type","id","onChange","adviceAdminUrl","Dashboard","existingAdvice","setExistingAdvice","newAdvice","setNewAdvice","getExistingAdvice","authorization","sort","b","date_created","localeCompare","addAdvice","bad_advice","addedAdvice","idToDelete","filter","advice","_id","removeItem","deleteAdvice","String","ProtectedRoute","Component","component","handleLogout","rest","render","props","to","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39e575fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Inter-Black.de70a8a9.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Bold.c73899df.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Inter-Regular.56786aa1.ttf\";","import React from \"react\";\n\nconst MethodIcon = ({ method }) => {\n  return (\n    <div className=\"method-icon\">\n      <p className=\"method-text\">{method}</p>\n    </div>\n  );\n};\n\nexport default MethodIcon;\n","import React from \"react\";\nimport MethodIcon from \"./MethodIcon\";\n\nconst Get = ({ url }) => {\n  return (\n    <div className=\"get-container\">\n      <MethodIcon method=\"get\"></MethodIcon>\n      <p>{url}</p>\n    </div>\n  );\n};\n\nexport default Get;\n","import React from \"react\";\n\nconst Response = ({ result, refresh }) => {\n  return (\n    <div className=\"response-container\">\n      <div className=\"response-header\">\n        <p>Response</p>\n        <button className=\"link\" onClick={() => refresh()}>\n          Refresh\n        </button>\n      </div>\n\n      <div className=\"result\">\n        {Array.isArray(result) ? (\n          <code className=\"result-text\">\n            [\n            <br />\n            {result.map((singleAdvice) => (\n              <React.Fragment key={singleAdvice}>\n                {\"\"} \"{singleAdvice}\",<br></br>\n              </React.Fragment>\n            ))}\n            ]\n          </code>\n        ) : (\n          <code className=\"result-text\">{result}</code>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Response;\n","import React, { useState, useEffect } from \"react\";\nimport Get from \"../components/Get\";\nimport Response from \"../components/Response\";\nimport Logo from \"../images/logo.svg\";\n\nconst url =\n  window.location.hostname === \"localhost\"\n    ? \"http://localhost:1337/api/\"\n    : \"https://badadvice.vercel.app/api/\";\n\nconst Docs = () => {\n  const [singleResult, setSingleResult] = useState();\n  const [multipleResult, setMultipleResult] = useState();\n\n  const getSingleAdvice = async () => {\n    return await fetch(url + \"/random\").then((response) =>\n      response.json().then((data) => setSingleResult(data))\n    );\n  };\n  const getMultipleAdvice = async () => {\n    return await fetch(url + \"count=5\").then((response) =>\n      response.json().then((data) => setMultipleResult(data))\n    );\n  };\n\n  useEffect(() => {\n    getSingleAdvice();\n  }, []);\n\n  useEffect(() => {\n    getMultipleAdvice();\n  }, []);\n  return (\n    <div className=\"container\">\n      <main>\n        <h1>\n          <img src={Logo} alt=\"\" className=\"logo\" />\n          BadAdvice\n        </h1>\n        <p className=\"hero-text\">\n          A free REST API for bad advice (bad advice as a service). Use it in\n          any project where good advice isn’t a requirement.\n        </p>\n\n        <h2>Usage</h2>\n        <h3>Retrieve random advice</h3>\n        <Get url=\"https://badadvice.vercel.app/api/random\" />\n        <Response result={singleResult} refresh={getSingleAdvice} />\n        <h3>Retrieve multiple random advice</h3>\n        <Get url=\"https://badadvice.vercel.app/api/count=5\" />\n        <Response result={multipleResult} refresh={getMultipleAdvice} />\n        <footer>\n          <div>\n            <span className=\"peace-emoji\" role=\"img\" aria-label=\"hidden\">\n              ✌️\n            </span>\n            Made by{\" \"}\n            <a href=\"https://www.adamparsons.me\" className=\"link\">\n              Adam Parsons\n            </a>\n          </div>\n          <div className=\"github\">\n            <a\n              href=\"https://github.com/adamgparsons/badadvice\"\n              className=\"link\"\n            >\n              GitHub\n            </a>\n          </div>\n        </footer>\n      </main>\n    </div>\n  );\n};\n\nexport default Docs;\n","import React from \"react\";\n\nconst Button = ({ label, onClick }) => {\n  return (\n    <button className=\"button\" onClick={onClick}>\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport Logo from \"../images/logo.svg\";\n\nconst url =\n  window.location.hostname === \"localhost\"\n    ? \"http://localhost:1337/auth/login\"\n    : \"https://badadvice.vercel.app/auth/login\";\n\nconst Login = () => {\n  const [loginDetails, setLoginDetails] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  let history = useHistory();\n\n  const validExistingUser = () => {\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(loginDetails),\n    })\n      .then((response) => {\n        console.log(\"response\", response);\n        if (response.ok) {\n          return response.json();\n        }\n        return response.json().then((error) => {\n          throw new Error(error.message);\n        });\n      })\n      .then((result) => {\n        localStorage.setItem(\"token\", result.token);\n        history.push(\"/dashboard\");\n      })\n      .catch((error) => {\n        // setErrorMessage(error.message);\n      });\n    // setErrorMessage(\"\");\n    return true;\n    // } else {\n    //   setErrorMessage(result.error.message);\n    //   return false;\n    // }\n  };\n\n  const handleInput = (e) => {\n    e.preventDefault();\n    setLoginDetails({\n      ...loginDetails,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    validExistingUser();\n  };\n\n  return (\n    <div className=\"container bg-near-grey\">\n      <main className=\"bg-near-grey\">\n        <div className=\"login-box\">\n          <h1 className=\"admin-logo t-center\">\n            <img src={Logo} alt=\"\" className=\"logo\" />\n            BadAdvice<span className=\"admin\">Admin</span>\n          </h1>\n          <form className=\"login-form w-100\" onSubmit={handleLogin}>\n            <label htmlFor=\"username\" className=\"text-label\">\n              Username\n            </label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              className=\"text-input w-100\"\n              value={loginDetails.username}\n              onChange={handleInput}\n            ></input>\n            <label htmlFor=\"password\" className=\"text-label\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              className=\"text-input w-100\"\n              value={loginDetails.password}\n              onChange={handleInput}\n            ></input>\n            <Button label=\"Login\" onClick={null} />\n          </form>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"../components/Button\";\nimport Logo from \"../images/logo.svg\";\n\nconst adviceAdminUrl =\n  window.location.hostname === \"localhost\"\n    ? \"http://localhost:1337/api/admin\"\n    : \"https://badadvice.vercel.app/api/admin\";\n\nconst Dashboard = () => {\n  const [existingAdvice, setExistingAdvice] = useState();\n  const [newAdvice, setNewAdvice] = useState(\"\");\n\n  let history = useHistory();\n\n  const handleInput = (e) => {\n    e.preventDefault();\n    setNewAdvice(e.target.value);\n  };\n\n  function sortAdvice(advice) {\n    return advice.sort((a, b) => b.date_created.localeCompare(a.date_created));\n  }\n\n  const getExistingAdvice = async () => {\n    return await fetch(adviceAdminUrl, {\n      headers: {\n        authorization: \"bearer \" + localStorage.token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => setExistingAdvice(sortAdvice(data)));\n  };\n\n  const addAdvice = async () => {\n    return await fetch(adviceAdminUrl, {\n      method: \"POST\",\n      headers: {\n        authorization: \"bearer \" + localStorage.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ bad_advice: newAdvice }),\n    })\n      .then((response) => response.json())\n      .then((addedAdvice) =>\n        setExistingAdvice([addedAdvice, ...existingAdvice])\n      )\n      .then(setNewAdvice(\"\"));\n  };\n\n  const handleAddAdvice = (e) => {\n    e.preventDefault();\n    addAdvice();\n  };\n\n  async function deleteAdvice(idToDelete) {\n    return await fetch(adviceAdminUrl, {\n      method: \"DELETE\",\n      headers: {\n        authorization: \"bearer \" + localStorage.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: idToDelete }),\n    }).then((response) => {\n      if (response.ok) {\n        setExistingAdvice(\n          existingAdvice.filter((advice) => advice._id !== idToDelete)\n        );\n      }\n    });\n  }\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    localStorage.removeItem(\"token\");\n    history.push(\"/admin\");\n  };\n\n  useEffect(() => {\n    getExistingAdvice();\n  }, []);\n\n  return (\n    <div className=\"container top bg-near-grey\">\n      <main>\n        <div className=\"logout-holder\">\n          <a className=\"link logout\" onClick={handleLogout}>\n            Log out\n          </a>\n        </div>\n\n        <h1 className=\"admin-logo\">\n          <img src={Logo} alt=\"\" className=\"logo\" />\n          BadAdvice<span className=\"admin\">Admin</span>\n        </h1>\n        <div className=\"add-advice\">\n          <form className=\"login-form w-100\" onSubmit={handleAddAdvice}>\n            <label htmlFor=\"new-advice\" className=\"text-label label-large\">\n              Add some advice\n            </label>\n            <textarea\n              type=\"text\"\n              id=\"new-advice\"\n              name=\"new-advice\"\n              className=\"text-input w-100\"\n              value={newAdvice}\n              onChange={handleInput}\n            ></textarea>\n            <Button label=\"Add advice\" onClick={null} />\n          </form>\n        </div>\n        <h2>Existing Advice</h2>\n        {}\n        {existingAdvice\n          ? existingAdvice.map((advice) => {\n              return (\n                <div className=\"existing-advice\" key={advice._id}>\n                  <p className=\"advice-paragraph\">{advice.bad_advice}</p>\n                  <div className=\"delete-holder\">\n                    <a\n                      className=\"delete\"\n                      onClick={() => deleteAdvice(String(advice._id))}\n                    >\n                      Delete\n                    </a>\n                  </div>\n                </div>\n              );\n            })\n          : null}\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, handleLogout, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        localStorage.token ? (\n          <Component {...props} handleLogout={handleLogout} />\n        ) : (\n          <Redirect to=\"/admin\" />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\nimport Docs from \"./views/docs\";\nimport Login from \"./views/login\";\nimport Dashboard from \"./views/dashboard\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/admin\">\n        <Login />\n      </Route>\n      <ProtectedRoute\n        exact\n        path=\"/dashboard\"\n        component={Dashboard}\n        // handleLogout={handleLogout}\n      />\n      <Route exact path=\"/\">\n        <Docs />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./fonts/Inter-Black.ttf\";\nimport \"./fonts/Inter-Bold.ttf\";\nimport \"./fonts/Inter-Regular.ttf\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.9c84ab11.svg\";"],"sourceRoot":""}